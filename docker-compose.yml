services:
  tbs-b-db:
    image: mysql:8.4
    container_name: tbs-b-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${TBS_DB_ROOT_PASSWORD}
    ports:
      - "3310:3306"
    volumes:
      - tbs_data:/var/lib/mysql
      - ./initials/mysql:/docker-entrypoint-initdb.d
    networks:
      - backend

  tbs-b-redis:
    image: redis:7.2
    container_name:  tbs-b-redis
    ports:
      - "6380:6379"
    command: >
      redis-server 
      --maxmemory 100mb 
      --maxmemory-policy allkeys-lru
      --bind 0.0.0.0
    restart: unless-stopped
    networks:
      - backend

  tbs-b-rabbitmq:
    image: rabbitmq:3-management
    container_name: tbs-b-rabbitmq
    ports:
      - "5672:5672"     
      - "15672:15672"   
    networks:
      - backend
    environment:
      RABBITMQ_DEFAULT_USER: ${TBS_RABBIT_MQ_ROOT_USER}
      RABBITMQ_DEFAULT_PASS: ${TBS_RABBIT_MQ_ROOT_PASSWORD}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_management load_definitions \"/etc/rabbitmq/definitions.json\""
    volumes:
      - tbs_rabbitmq_data:/var/lib/rabbitmq
      - ./initials/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./initials/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  tbs-b-auth-service:
    build:
      context: .
      dockerfile: Auth/Dockerfile
    container_name:  tbs-b-auth-service
    depends_on:
      - tbs-b-db
      - tbs-b-redis
      - tbs-b-rabbitmq
    ports:
      - "5030:80"
    networks:
      - backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5030
      - ConnectionStrings__DefaultConnection=${TBS_DB_AUTH_CONNECTION_STRING}
      - ConnectionStrings__Redis=${TBS_DB_REDIS}
      - RabbitMQ__HostName=tbs-b-rabbitmq
      - RabbitMQ__UserName=${TBS_RABBIT_MQ_USER_NOTIFICATION}
      - RabbitMQ__Password=${TBS_RABBIT_MQ_PASSWORD_NOTIFICATION}
      - RabbitMQ__VirtualHost=notifications

  tbs-b-notification-service:
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    container_name: tbs-b-notification-service
    depends_on:
      tbs-b-rabbitmq:
        condition: service_healthy
    networks:
      - backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMQ__HostName=tbs-b-rabbitmq
      - RabbitMQ__UserName=${TBS_RABBIT_MQ_USER_NOTIFICATION}
      - RabbitMQ__Password=${TBS_RABBIT_MQ_PASSWORD_NOTIFICATION}
      - RabbitMQ__VirtualHost=notifications
    restart: unless-stopped

  tbs-b-nginx:
    image: nginx:latest
    container_name: tbs-b-nginx
    volumes:
      - ./initials/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
    depends_on:
      - tbs-b-auth-service
    networks:
      - backend

volumes:
  tbs_data:
  tbs_rabbitmq_data:

networks:
  backend:
    driver: bridge



