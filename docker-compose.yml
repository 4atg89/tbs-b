services:
  tbs-b-auth-db:
    image: mysql:8.4
    container_name: tbs-b-auth-db
    restart: always
    environment:
      MYSQL_DATABASE: auth_db
      MYSQL_USER: ${TBS_DB_ACCOUNT_USER}
      MYSQL_PASSWORD: ${TBS_DB_ACCOUNT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${TBS_DB_ACCOUNT_ROOT_PASSWORD}
    ports:
      - "3310:3306"
    volumes:
      - tbs_auth_data:/var/lib/mysql
    networks:
      - backend

  tbs-b-redis-auth:
    image: redis:7.2
    container_name:  tbs-b-redis-auth
    ports:
      - "6380:6379"
    command: >
      redis-server 
      --maxmemory 100mb 
      --maxmemory-policy allkeys-lru
      --bind 0.0.0.0
    restart: unless-stopped
    networks:
      - backend
  tbs-b-auth-service:
    build:
      context: .
      dockerfile: Auth/Dockerfile
    container_name:  tbs-b-auth-service
    depends_on:
      - tbs-b-auth-db
      - tbs-b-redis-auth
    ports:
      - "5030:5030"
    networks:
      - backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5030
      - ConnectionStrings__DefaultConnection=${TBS_DB_ACCOUNT_CONNECTION_STRING}
      - ConnectionStrings__Redis=${TBS_DB_ACCOUNT_REDIS}

volumes:
  tbs_auth_data:

networks:
  backend:
    driver: bridge



